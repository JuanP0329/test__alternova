<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2fa225b9-a313-4373-92dd-008f7626a673" name="Changes" comment="The main.py file is created.&#10;Required dependencies are installed: requests and twilio.&#10;Twilio permissions and credentials are configured to link the application with its service.&#10;The provided WhatsApp number is verified to receive notifications.&#10;A function is created to consume the CoinGecko API and retrieve the USD values of Bitcoin, Ethereum, and Binance Coin in JSON format.&#10;A function is defined to evaluate cryptocurrency thresholds and generate alerts if values exceed the established limits.&#10;A function is implemented to generate and send the alert message to the configured WhatsApp number.&#10;The main function is created to orchestrate all functions and ensure the proper flow of the application.">
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/readmeresource/image16.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2mFx167XP8LKAnme2oKNTYpUT7g" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python.main.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "feature/add-docker-in-project",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\HP\PycharmProjects\test__alternova\readmeresource" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="test__alternova" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153" />
        <option value="bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2fa225b9-a313-4373-92dd-008f7626a673" name="Changes" comment="" />
      <created>1726685909502</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1726685909502</updated>
      <workItem from="1726685910892" duration="465000" />
      <workItem from="1726686403701" duration="18812000" />
      <workItem from="1726762699986" duration="13220000" />
    </task>
    <task id="LOCAL-00001" summary="- Se crea el archivo `main.py`.&#10;- Se instalan las dependencias requeridas: `requests` y `twilio`.&#10;- Se configuran los permisos y credenciales de Twilio para vincular la aplicación con su servicio.&#10;- Se verifica el número de WhatsApp suministrado para recibir las notificaciones.&#10;- Se crea una función para consumir la API de CoinGecko y obtener los valores en USD de Bitcoin, Ethereum y Binance Coin en formato JSON.&#10;- Se define una función para evaluar los umbrales de las criptomonedas y generar alertas si los valores superan los límites establecidos.&#10;- Se implementa una función que genera y envía el mensaje de alerta al número de WhatsApp configurado.&#10;- Se crea la función `main` para orquestar todas las funciones y garantizar el flujo adecuado de la aplicación.">
      <option name="closed" value="true" />
      <created>1726774155397</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1726774155397</updated>
    </task>
    <task id="LOCAL-00002" summary="The main.py file is created.&#10;Required dependencies are installed: requests and twilio.&#10;Twilio permissions and credentials are configured to link the application with its service.&#10;The provided WhatsApp number is verified to receive notifications.&#10;A function is created to consume the CoinGecko API and retrieve the USD values of Bitcoin, Ethereum, and Binance Coin in JSON format.&#10;A function is defined to evaluate cryptocurrency thresholds and generate alerts if values exceed the established limits.&#10;A function is implemented to generate and send the alert message to the configured WhatsApp number.&#10;The main function is created to orchestrate all functions and ensure the proper flow of the application.">
      <option name="closed" value="true" />
      <created>1726774267739</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1726774267739</updated>
    </task>
    <task id="LOCAL-00003" summary="The python-dotenv dependency is added to handle environment variables within the project.&#10;&#10;The .env file is created to manage environment variables and securely store credentials.&#10;&#10;The .gitignore file is created to prevent sensitive files and folders like .env and venv from being uploaded to the repository.">
      <option name="closed" value="true" />
      <created>1726776813556</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1726776813556</updated>
    </task>
    <task id="LOCAL-00004" summary="The main.py file is created.&#10;Required dependencies are installed: requests and twilio.&#10;Twilio permissions and credentials are configured to link the application with its service.&#10;The provided WhatsApp number is verified to receive notifications.&#10;A function is created to consume the CoinGecko API and retrieve the USD values of Bitcoin, Ethereum, and Binance Coin in JSON format.&#10;A function is defined to evaluate cryptocurrency thresholds and generate alerts if values exceed the established limits.&#10;A function is implemented to generate and send the alert message to the configured WhatsApp number.&#10;The main function is created to orchestrate all functions and ensure the proper flow of the application.">
      <option name="closed" value="true" />
      <created>1726777387316</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1726777387316</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="- Se crea el archivo `main.py`.&#10;- Se instalan las dependencias requeridas: `requests` y `twilio`.&#10;- Se configuran los permisos y credenciales de Twilio para vincular la aplicación con su servicio.&#10;- Se verifica el número de WhatsApp suministrado para recibir las notificaciones.&#10;- Se crea una función para consumir la API de CoinGecko y obtener los valores en USD de Bitcoin, Ethereum y Binance Coin en formato JSON.&#10;- Se define una función para evaluar los umbrales de las criptomonedas y generar alertas si los valores superan los límites establecidos.&#10;- Se implementa una función que genera y envía el mensaje de alerta al número de WhatsApp configurado.&#10;- Se crea la función `main` para orquestar todas las funciones y garantizar el flujo adecuado de la aplicación." />
    <MESSAGE value="The python-dotenv dependency is added to handle environment variables within the project.&#10;&#10;The .env file is created to manage environment variables and securely store credentials.&#10;&#10;The .gitignore file is created to prevent sensitive files and folders like .env and venv from being uploaded to the repository." />
    <MESSAGE value="The main.py file is created.&#10;Required dependencies are installed: requests and twilio.&#10;Twilio permissions and credentials are configured to link the application with its service.&#10;The provided WhatsApp number is verified to receive notifications.&#10;A function is created to consume the CoinGecko API and retrieve the USD values of Bitcoin, Ethereum, and Binance Coin in JSON format.&#10;A function is defined to evaluate cryptocurrency thresholds and generate alerts if values exceed the established limits.&#10;A function is implemented to generate and send the alert message to the configured WhatsApp number.&#10;The main function is created to orchestrate all functions and ensure the proper flow of the application." />
    <option name="LAST_COMMIT_MESSAGE" value="The main.py file is created.&#10;Required dependencies are installed: requests and twilio.&#10;Twilio permissions and credentials are configured to link the application with its service.&#10;The provided WhatsApp number is verified to receive notifications.&#10;A function is created to consume the CoinGecko API and retrieve the USD values of Bitcoin, Ethereum, and Binance Coin in JSON format.&#10;A function is defined to evaluate cryptocurrency thresholds and generate alerts if values exceed the established limits.&#10;A function is implemented to generate and send the alert message to the configured WhatsApp number.&#10;The main function is created to orchestrate all functions and ensure the proper flow of the application." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/test__alternova$main.coverage" NAME="main Coverage Results" MODIFIED="1726782931974" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>